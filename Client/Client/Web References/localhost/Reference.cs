//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Client.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetdOperationCompleted;
        
        private System.Threading.SendOrPostCallback registeraOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerpOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerdOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginaOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginpOperationCompleted;
        
        private System.Threading.SendOrPostCallback logindOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchAOperationCompleted;
        
        private System.Threading.SendOrPostCallback timingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback showOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchhistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveOperationCompleted;
        
        private System.Threading.SendOrPostCallback show6OperationCompleted;
        
        private System.Threading.SendOrPostCallback showpOperationCompleted;
        
        private System.Threading.SendOrPostCallback addmedOperationCompleted;
        
        private System.Threading.SendOrPostCallback addintoOperationCompleted;
        
        private System.Threading.SendOrPostCallback atlastshowOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::Client.Properties.Settings.Default.Client_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// <remarks/>
        public event resetCompletedEventHandler resetCompleted;
        
        /// <remarks/>
        public event resetaCompletedEventHandler resetaCompleted;
        
        /// <remarks/>
        public event resetdCompletedEventHandler resetdCompleted;
        
        /// <remarks/>
        public event registeraCompletedEventHandler registeraCompleted;
        
        /// <remarks/>
        public event registerpCompletedEventHandler registerpCompleted;
        
        /// <remarks/>
        public event registerdCompletedEventHandler registerdCompleted;
        
        /// <remarks/>
        public event loginaCompletedEventHandler loginaCompleted;
        
        /// <remarks/>
        public event loginpCompletedEventHandler loginpCompleted;
        
        /// <remarks/>
        public event logindCompletedEventHandler logindCompleted;
        
        /// <remarks/>
        public event searchCompletedEventHandler searchCompleted;
        
        /// <remarks/>
        public event searchACompletedEventHandler searchACompleted;
        
        /// <remarks/>
        public event timingsCompletedEventHandler timingsCompleted;
        
        /// <remarks/>
        public event showCompletedEventHandler showCompleted;
        
        /// <remarks/>
        public event searchhistoryCompletedEventHandler searchhistoryCompleted;
        
        /// <remarks/>
        public event saveCompletedEventHandler saveCompleted;
        
        /// <remarks/>
        public event show6CompletedEventHandler show6Completed;
        
        /// <remarks/>
        public event showpCompletedEventHandler showpCompleted;
        
        /// <remarks/>
        public event addmedCompletedEventHandler addmedCompleted;
        
        /// <remarks/>
        public event addintoCompletedEventHandler addintoCompleted;
        
        /// <remarks/>
        public event atlastshowCompletedEventHandler atlastshowCompleted;
        
        /// <remarks/>
        public event getpCompletedEventHandler getpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("GetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified) {
            this.GetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        value,
                        valueSpecified}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/reset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void reset([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confirmpassword, out bool resetResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool resetResultSpecified) {
            object[] results = this.Invoke("reset", new object[] {
                        patientname,
                        patientCNIC,
                        patientpassword,
                        confirmpassword});
            resetResult = ((bool)(results[0]));
            resetResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void resetAsync(string patientname, string patientCNIC, string patientpassword, string confirmpassword) {
            this.resetAsync(patientname, patientCNIC, patientpassword, confirmpassword, null);
        }
        
        /// <remarks/>
        public void resetAsync(string patientname, string patientCNIC, string patientpassword, string confirmpassword, object userState) {
            if ((this.resetOperationCompleted == null)) {
                this.resetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetOperationCompleted);
            }
            this.InvokeAsync("reset", new object[] {
                        patientname,
                        patientCNIC,
                        patientpassword,
                        confirmpassword}, this.resetOperationCompleted, userState);
        }
        
        private void OnresetOperationCompleted(object arg) {
            if ((this.resetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetCompleted(this, new resetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/reseta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void reseta([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confirmpassword, out bool resetaResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool resetaResultSpecified) {
            object[] results = this.Invoke("reseta", new object[] {
                        adminname,
                        adminCNIC,
                        adminpassword,
                        confirmpassword});
            resetaResult = ((bool)(results[0]));
            resetaResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void resetaAsync(string adminname, string adminCNIC, string adminpassword, string confirmpassword) {
            this.resetaAsync(adminname, adminCNIC, adminpassword, confirmpassword, null);
        }
        
        /// <remarks/>
        public void resetaAsync(string adminname, string adminCNIC, string adminpassword, string confirmpassword, object userState) {
            if ((this.resetaOperationCompleted == null)) {
                this.resetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetaOperationCompleted);
            }
            this.InvokeAsync("reseta", new object[] {
                        adminname,
                        adminCNIC,
                        adminpassword,
                        confirmpassword}, this.resetaOperationCompleted, userState);
        }
        
        private void OnresetaOperationCompleted(object arg) {
            if ((this.resetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetaCompleted(this, new resetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/resetd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resetd([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string confirmpassword, out bool resetdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool resetdResultSpecified) {
            object[] results = this.Invoke("resetd", new object[] {
                        doctorname,
                        doctorCNIC,
                        doctorpassword,
                        confirmpassword});
            resetdResult = ((bool)(results[0]));
            resetdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void resetdAsync(string doctorname, string doctorCNIC, string doctorpassword, string confirmpassword) {
            this.resetdAsync(doctorname, doctorCNIC, doctorpassword, confirmpassword, null);
        }
        
        /// <remarks/>
        public void resetdAsync(string doctorname, string doctorCNIC, string doctorpassword, string confirmpassword, object userState) {
            if ((this.resetdOperationCompleted == null)) {
                this.resetdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetdOperationCompleted);
            }
            this.InvokeAsync("resetd", new object[] {
                        doctorname,
                        doctorCNIC,
                        doctorpassword,
                        confirmpassword}, this.resetdOperationCompleted, userState);
        }
        
        private void OnresetdOperationCompleted(object arg) {
            if ((this.resetdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetdCompleted(this, new resetdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registera", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registera([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminpassword) {
            this.Invoke("registera", new object[] {
                        adminname,
                        adminCNIC,
                        adminpassword});
        }
        
        /// <remarks/>
        public void registeraAsync(string adminname, string adminCNIC, string adminpassword) {
            this.registeraAsync(adminname, adminCNIC, adminpassword, null);
        }
        
        /// <remarks/>
        public void registeraAsync(string adminname, string adminCNIC, string adminpassword, object userState) {
            if ((this.registeraOperationCompleted == null)) {
                this.registeraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisteraOperationCompleted);
            }
            this.InvokeAsync("registera", new object[] {
                        adminname,
                        adminCNIC,
                        adminpassword}, this.registeraOperationCompleted, userState);
        }
        
        private void OnregisteraOperationCompleted(object arg) {
            if ((this.registeraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registeraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientpassword) {
            this.Invoke("registerp", new object[] {
                        patientname,
                        patientCNIC,
                        patientpassword});
        }
        
        /// <remarks/>
        public void registerpAsync(string patientname, string patientCNIC, string patientpassword) {
            this.registerpAsync(patientname, patientCNIC, patientpassword, null);
        }
        
        /// <remarks/>
        public void registerpAsync(string patientname, string patientCNIC, string patientpassword, object userState) {
            if ((this.registerpOperationCompleted == null)) {
                this.registerpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterpOperationCompleted);
            }
            this.InvokeAsync("registerp", new object[] {
                        patientname,
                        patientCNIC,
                        patientpassword}, this.registerpOperationCompleted, userState);
        }
        
        private void OnregisterpOperationCompleted(object arg) {
            if ((this.registerpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerd([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hospitalname) {
            this.Invoke("registerd", new object[] {
                        doctorname,
                        doctorCNIC,
                        doctorpassword,
                        hospitalname});
        }
        
        /// <remarks/>
        public void registerdAsync(string doctorname, string doctorCNIC, string doctorpassword, string hospitalname) {
            this.registerdAsync(doctorname, doctorCNIC, doctorpassword, hospitalname, null);
        }
        
        /// <remarks/>
        public void registerdAsync(string doctorname, string doctorCNIC, string doctorpassword, string hospitalname, object userState) {
            if ((this.registerdOperationCompleted == null)) {
                this.registerdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterdOperationCompleted);
            }
            this.InvokeAsync("registerd", new object[] {
                        doctorname,
                        doctorCNIC,
                        doctorpassword,
                        hospitalname}, this.registerdOperationCompleted, userState);
        }
        
        private void OnregisterdOperationCompleted(object arg) {
            if ((this.registerdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/logina", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logina([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminpassword, out bool loginaResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool loginaResultSpecified) {
            object[] results = this.Invoke("logina", new object[] {
                        adminCNIC,
                        adminpassword});
            loginaResult = ((bool)(results[0]));
            loginaResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void loginaAsync(string adminCNIC, string adminpassword) {
            this.loginaAsync(adminCNIC, adminpassword, null);
        }
        
        /// <remarks/>
        public void loginaAsync(string adminCNIC, string adminpassword, object userState) {
            if ((this.loginaOperationCompleted == null)) {
                this.loginaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginaOperationCompleted);
            }
            this.InvokeAsync("logina", new object[] {
                        adminCNIC,
                        adminpassword}, this.loginaOperationCompleted, userState);
        }
        
        private void OnloginaOperationCompleted(object arg) {
            if ((this.loginaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginaCompleted(this, new loginaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loginp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void loginp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string patientpassword, out bool loginpResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool loginpResultSpecified) {
            object[] results = this.Invoke("loginp", new object[] {
                        patientCNIC,
                        patientpassword});
            loginpResult = ((bool)(results[0]));
            loginpResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void loginpAsync(string patientCNIC, string patientpassword) {
            this.loginpAsync(patientCNIC, patientpassword, null);
        }
        
        /// <remarks/>
        public void loginpAsync(string patientCNIC, string patientpassword, object userState) {
            if ((this.loginpOperationCompleted == null)) {
                this.loginpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginpOperationCompleted);
            }
            this.InvokeAsync("loginp", new object[] {
                        patientCNIC,
                        patientpassword}, this.loginpOperationCompleted, userState);
        }
        
        private void OnloginpOperationCompleted(object arg) {
            if ((this.loginpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginpCompleted(this, new loginpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/logind", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logind([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hospitalname, out bool logindResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool logindResultSpecified) {
            object[] results = this.Invoke("logind", new object[] {
                        doctorname,
                        doctorCNIC,
                        doctorpassword,
                        hospitalname});
            logindResult = ((bool)(results[0]));
            logindResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void logindAsync(string doctorname, string doctorCNIC, string doctorpassword, string hospitalname) {
            this.logindAsync(doctorname, doctorCNIC, doctorpassword, hospitalname, null);
        }
        
        /// <remarks/>
        public void logindAsync(string doctorname, string doctorCNIC, string doctorpassword, string hospitalname, object userState) {
            if ((this.logindOperationCompleted == null)) {
                this.logindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogindOperationCompleted);
            }
            this.InvokeAsync("logind", new object[] {
                        doctorname,
                        doctorCNIC,
                        doctorpassword,
                        hospitalname}, this.logindOperationCompleted, userState);
        }
        
        private void OnlogindOperationCompleted(object arg) {
            if ((this.logindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logindCompleted(this, new logindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public DoctorUser[] search() {
            object[] results = this.Invoke("search", new object[0]);
            return ((DoctorUser[])(results[0]));
        }
        
        /// <remarks/>
        public void searchAsync() {
            this.searchAsync(null);
        }
        
        /// <remarks/>
        public void searchAsync(object userState) {
            if ((this.searchOperationCompleted == null)) {
                this.searchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchOperationCompleted);
            }
            this.InvokeAsync("search", new object[0], this.searchOperationCompleted, userState);
        }
        
        private void OnsearchOperationCompleted(object arg) {
            if ((this.searchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCompleted(this, new searchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/searchA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DoctorUser searchA([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorCNIC) {
            object[] results = this.Invoke("searchA", new object[] {
                        doctorCNIC});
            return ((DoctorUser)(results[0]));
        }
        
        /// <remarks/>
        public void searchAAsync(string doctorCNIC) {
            this.searchAAsync(doctorCNIC, null);
        }
        
        /// <remarks/>
        public void searchAAsync(string doctorCNIC, object userState) {
            if ((this.searchAOperationCompleted == null)) {
                this.searchAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchAOperationCompleted);
            }
            this.InvokeAsync("searchA", new object[] {
                        doctorCNIC}, this.searchAOperationCompleted, userState);
        }
        
        private void OnsearchAOperationCompleted(object arg) {
            if ((this.searchACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchACompleted(this, new searchACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/timings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void timings([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorCNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hospitalname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string department, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string day, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string time, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string date) {
            this.Invoke("timings", new object[] {
                        doctorname,
                        doctorCNIC,
                        hospitalname,
                        department,
                        day,
                        time,
                        date});
        }
        
        /// <remarks/>
        public void timingsAsync(string doctorname, string doctorCNIC, string hospitalname, string department, string day, string time, string date) {
            this.timingsAsync(doctorname, doctorCNIC, hospitalname, department, day, time, date, null);
        }
        
        /// <remarks/>
        public void timingsAsync(string doctorname, string doctorCNIC, string hospitalname, string department, string day, string time, string date, object userState) {
            if ((this.timingsOperationCompleted == null)) {
                this.timingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimingsOperationCompleted);
            }
            this.InvokeAsync("timings", new object[] {
                        doctorname,
                        doctorCNIC,
                        hospitalname,
                        department,
                        day,
                        time,
                        date}, this.timingsOperationCompleted, userState);
        }
        
        private void OntimingsOperationCompleted(object arg) {
            if ((this.timingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/show", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public DoctorUser[] show() {
            object[] results = this.Invoke("show", new object[0]);
            return ((DoctorUser[])(results[0]));
        }
        
        /// <remarks/>
        public void showAsync() {
            this.showAsync(null);
        }
        
        /// <remarks/>
        public void showAsync(object userState) {
            if ((this.showOperationCompleted == null)) {
                this.showOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowOperationCompleted);
            }
            this.InvokeAsync("show", new object[0], this.showOperationCompleted, userState);
        }
        
        private void OnshowOperationCompleted(object arg) {
            if ((this.showCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showCompleted(this, new showCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/searchhistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public PatientUser[] searchhistory() {
            object[] results = this.Invoke("searchhistory", new object[0]);
            return ((PatientUser[])(results[0]));
        }
        
        /// <remarks/>
        public void searchhistoryAsync() {
            this.searchhistoryAsync(null);
        }
        
        /// <remarks/>
        public void searchhistoryAsync(object userState) {
            if ((this.searchhistoryOperationCompleted == null)) {
                this.searchhistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchhistoryOperationCompleted);
            }
            this.InvokeAsync("searchhistory", new object[0], this.searchhistoryOperationCompleted, userState);
        }
        
        private void OnsearchhistoryOperationCompleted(object arg) {
            if ((this.searchhistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchhistoryCompleted(this, new searchhistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/save", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void save([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string medicines, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string age, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string disease) {
            this.Invoke("save", new object[] {
                        CNIC,
                        medicines,
                        age,
                        disease});
        }
        
        /// <remarks/>
        public void saveAsync(string CNIC, string medicines, string age, string disease) {
            this.saveAsync(CNIC, medicines, age, disease, null);
        }
        
        /// <remarks/>
        public void saveAsync(string CNIC, string medicines, string age, string disease, object userState) {
            if ((this.saveOperationCompleted == null)) {
                this.saveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveOperationCompleted);
            }
            this.InvokeAsync("save", new object[] {
                        CNIC,
                        medicines,
                        age,
                        disease}, this.saveOperationCompleted, userState);
        }
        
        private void OnsaveOperationCompleted(object arg) {
            if ((this.saveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/show6", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DoctorUser show6([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string doctorname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string department) {
            object[] results = this.Invoke("show6", new object[] {
                        doctorname,
                        department});
            return ((DoctorUser)(results[0]));
        }
        
        /// <remarks/>
        public void show6Async(string doctorname, string department) {
            this.show6Async(doctorname, department, null);
        }
        
        /// <remarks/>
        public void show6Async(string doctorname, string department, object userState) {
            if ((this.show6OperationCompleted == null)) {
                this.show6OperationCompleted = new System.Threading.SendOrPostCallback(this.Onshow6OperationCompleted);
            }
            this.InvokeAsync("show6", new object[] {
                        doctorname,
                        department}, this.show6OperationCompleted, userState);
        }
        
        private void Onshow6OperationCompleted(object arg) {
            if ((this.show6Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.show6Completed(this, new show6CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/showp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public PatientUser[] showp() {
            object[] results = this.Invoke("showp", new object[0]);
            return ((PatientUser[])(results[0]));
        }
        
        /// <remarks/>
        public void showpAsync() {
            this.showpAsync(null);
        }
        
        /// <remarks/>
        public void showpAsync(object userState) {
            if ((this.showpOperationCompleted == null)) {
                this.showpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowpOperationCompleted);
            }
            this.InvokeAsync("showp", new object[0], this.showpOperationCompleted, userState);
        }
        
        private void OnshowpOperationCompleted(object arg) {
            if ((this.showpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showpCompleted(this, new showpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addmed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PatientUser addmed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CNIC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string medicines, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string age, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string disease) {
            object[] results = this.Invoke("addmed", new object[] {
                        CNIC,
                        medicines,
                        age,
                        disease});
            return ((PatientUser)(results[0]));
        }
        
        /// <remarks/>
        public void addmedAsync(string CNIC, string medicines, string age, string disease) {
            this.addmedAsync(CNIC, medicines, age, disease, null);
        }
        
        /// <remarks/>
        public void addmedAsync(string CNIC, string medicines, string age, string disease, object userState) {
            if ((this.addmedOperationCompleted == null)) {
                this.addmedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddmedOperationCompleted);
            }
            this.InvokeAsync("addmed", new object[] {
                        CNIC,
                        medicines,
                        age,
                        disease}, this.addmedOperationCompleted, userState);
        }
        
        private void OnaddmedOperationCompleted(object arg) {
            if ((this.addmedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addmedCompleted(this, new addmedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addinto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addinto([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string age, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string medicines, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string disease, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CNIC) {
            this.Invoke("addinto", new object[] {
                        age,
                        medicines,
                        disease,
                        CNIC});
        }
        
        /// <remarks/>
        public void addintoAsync(string age, string medicines, string disease, string CNIC) {
            this.addintoAsync(age, medicines, disease, CNIC, null);
        }
        
        /// <remarks/>
        public void addintoAsync(string age, string medicines, string disease, string CNIC, object userState) {
            if ((this.addintoOperationCompleted == null)) {
                this.addintoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddintoOperationCompleted);
            }
            this.InvokeAsync("addinto", new object[] {
                        age,
                        medicines,
                        disease,
                        CNIC}, this.addintoOperationCompleted, userState);
        }
        
        private void OnaddintoOperationCompleted(object arg) {
            if ((this.addintoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addintoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/atlastshow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PatientUser atlastshow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] PatientUser p) {
            object[] results = this.Invoke("atlastshow", new object[] {
                        p});
            return ((PatientUser)(results[0]));
        }
        
        /// <remarks/>
        public void atlastshowAsync(PatientUser p) {
            this.atlastshowAsync(p, null);
        }
        
        /// <remarks/>
        public void atlastshowAsync(PatientUser p, object userState) {
            if ((this.atlastshowOperationCompleted == null)) {
                this.atlastshowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnatlastshowOperationCompleted);
            }
            this.InvokeAsync("atlastshow", new object[] {
                        p}, this.atlastshowOperationCompleted, userState);
        }
        
        private void OnatlastshowOperationCompleted(object arg) {
            if ((this.atlastshowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.atlastshowCompleted(this, new atlastshowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PatientUser getp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CNIC) {
            object[] results = this.Invoke("getp", new object[] {
                        CNIC});
            return ((PatientUser)(results[0]));
        }
        
        /// <remarks/>
        public void getpAsync(string CNIC) {
            this.getpAsync(CNIC, null);
        }
        
        /// <remarks/>
        public void getpAsync(string CNIC, object userState) {
            if ((this.getpOperationCompleted == null)) {
                this.getpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpOperationCompleted);
            }
            this.InvokeAsync("getp", new object[] {
                        CNIC}, this.getpOperationCompleted, userState);
        }
        
        private void OngetpOperationCompleted(object arg) {
            if ((this.getpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpCompleted(this, new getpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class CompositeType {
        
        private bool boolValueField;
        
        private bool boolValueFieldSpecified;
        
        private string stringValueField;
        
        /// <remarks/>
        public bool BoolValue {
            get {
                return this.boolValueField;
            }
            set {
                this.boolValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified {
            get {
                return this.boolValueFieldSpecified;
            }
            set {
                this.boolValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class PatientUser {
        
        private string ageField;
        
        private string disease1Field;
        
        private string medicines1Field;
        
        private string patientCNICField;
        
        private string patientnameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Disease1 {
            get {
                return this.disease1Field;
            }
            set {
                this.disease1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Medicines1 {
            get {
                return this.medicines1Field;
            }
            set {
                this.medicines1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PatientCNIC {
            get {
                return this.patientCNICField;
            }
            set {
                this.patientCNICField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Patientname {
            get {
                return this.patientnameField;
            }
            set {
                this.patientnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class DoctorUser {
        
        private string date1Field;
        
        private string day1Field;
        
        private string department1Field;
        
        private string doctorCNICField;
        
        private string doctornameField;
        
        private string hospitalnameField;
        
        private string time1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Date1 {
            get {
                return this.date1Field;
            }
            set {
                this.date1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Day1 {
            get {
                return this.day1Field;
            }
            set {
                this.day1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Department1 {
            get {
                return this.department1Field;
            }
            set {
                this.department1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoctorCNIC {
            get {
                return this.doctorCNICField;
            }
            set {
                this.doctorCNICField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Doctorname {
            get {
                return this.doctornameField;
            }
            set {
                this.doctornameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Hospitalname {
            get {
                return this.hospitalnameField;
            }
            set {
                this.hospitalnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Time1 {
            get {
                return this.time1Field;
            }
            set {
                this.time1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void resetCompletedEventHandler(object sender, resetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool resetResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool resetResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void resetaCompletedEventHandler(object sender, resetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool resetaResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool resetaResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void resetdCompletedEventHandler(object sender, resetdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool resetdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool resetdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void registeraCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void registerpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void registerdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void loginaCompletedEventHandler(object sender, loginaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool loginaResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool loginaResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void loginpCompletedEventHandler(object sender, loginpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool loginpResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool loginpResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void logindCompletedEventHandler(object sender, logindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool logindResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool logindResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void searchCompletedEventHandler(object sender, searchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DoctorUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DoctorUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void searchACompletedEventHandler(object sender, searchACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DoctorUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DoctorUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void timingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void showCompletedEventHandler(object sender, showCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DoctorUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DoctorUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void searchhistoryCompletedEventHandler(object sender, searchhistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchhistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchhistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void saveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void show6CompletedEventHandler(object sender, show6CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class show6CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal show6CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DoctorUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DoctorUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void showpCompletedEventHandler(object sender, showpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void addmedCompletedEventHandler(object sender, addmedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addmedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addmedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void addintoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void atlastshowCompletedEventHandler(object sender, atlastshowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class atlastshowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal atlastshowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getpCompletedEventHandler(object sender, getpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientUser)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591